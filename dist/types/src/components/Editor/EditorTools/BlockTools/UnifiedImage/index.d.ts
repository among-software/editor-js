import "./index.css";
import { BlockTool, BlockToolConstructorOptions, BlockToolData, ToolboxConfig, PasteConfig } from "@editorjs/editorjs";
export default class UnifiedImage implements BlockTool {
    static draggedImage: any;
    static sourceInstance: UnifiedImage | null;
    static sourceIndex: number | null;
    static activeImageBlock: UnifiedImage | null;
    static get isReadOnlySupported(): boolean;
    static get contentless(): boolean;
    static get toolbox(): ToolboxConfig;
    static get pasteConfig(): PasteConfig;
    private api;
    private _CSS;
    private data;
    private _element;
    private activateCaption;
    constructor({ data, api }: BlockToolConstructorOptions);
    private initializeCSS;
    drawView(): HTMLDivElement;
    private updateCaptionVisibility;
    private deactivate;
    private showCaption;
    private hideCaption;
    private handleKeyDown;
    private renderImages;
    private createImageWrapper;
    private addImageEventListeners;
    onDragStart(e: DragEvent, imageData: any, index: number): void;
    onDragOver(e: DragEvent, index: number): void;
    private getDropType;
    onDrop(e: DragEvent, targetIndex: number): Promise<void>;
    private onDropNewBlock;
    private getDropPosition;
    private handleInternalDrop;
    private handleExternalDrop;
    onDragLeave(e: DragEvent): void;
    clearDragOverEffects(): void;
    onDragOverBlock(e: DragEvent): void;
    onDropBlock(e: DragEvent): void;
    private handleBlockDrop;
    private determineDropIndex;
    private updateBlocks;
    updateView(): void;
    save(): BlockToolData;
    onPaste(): void;
    render(): HTMLDivElement;
}
